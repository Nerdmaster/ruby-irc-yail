1.4.1
=====

NOTE: This will not be released as its own gem - it isn't a substantial change, and slightly affects
backward-compatibility.  I'm not sure why I even tagged it other than it is its own feature....

New
---

* YAIL now defaults to use Logger for all non-event logging.  Prepare for all logging to be pulled
  out of YAIL soon, but anything that stays core will be *real* logs (debug logs for IRC messages,
  fatal for truly critical errors, etc) instead of just STDERR prints.  You can access the log via
  yail_object.log in order to change loglevel and such, and pass in your own logger via YAIL's
  constructor.

Changes
-------

* Specifying :loud and :silent in the constructor are NOW DEPRECATED.  These will be removed by
  version 2, and possibly at the next minor version bump.  I hate them.  Instead, either specify
  your own logger via the :log key in the constructor, or change your object via something like
  `irc.log.level = ...`
  * @loud and @silent have been renamed to discourage using those directly as a way to avoid the
    deprecation warnings.  I will change these again, so don't rely on them!
    * Note that if you really hate the warnings, you can of course choose not to hear them -
      they're logged as WARN level events.
  * The default level will be WARN.  The "loud" level is DEBUG.  The "silent" level is FATAL.
  * Note that YAIL still uses @silent for suppressing event reports in the output API.  This is
    because I'm a moron, and I need to keep that functionality as-is until I tear it out of the
    library completely.  Some people who are really stupid (me) actually rely on that reporting.
    When I tear this stuff out is when deprecation ends and full removal of those options happens.
* Basic class is now in the file net/yail/irc_bot instead of net/yail/IRCBot, to better follow
  Ruby conventions.  I've left IRCBot there for now, but I may eventually take that away, so
  consider fixing your `requires` statements today!


1.4.0
=====

New
---

* HOLY CRAP!  I never provided a topic change event?!?  Well, now it's here.  :incoming_topic_change
  at your service.  Note that this is VERY DIFFERENT from the numeric :incoming_topic event, which
  only tells you current topic for a channel.
  * NOTE: if you've been handling topic changes via the miscellaneous handler, you *will* have to
    change your code!
* prepend_handler can now take a block instead of just a Proc object!
* In addition to using the `start_listening` method of Net::YAIL, you can now call the "dangerous"
  version of that method: `start_listening!`, which wraps the "safe" version, but also starts an
  endless loop.  For extremely simple bots, this is simplifies your codebase greatly.
* New bot example added to demonstrate a very simple case that's still pretty easy to extend and
  configure: examples/simple/dumbbot.rb

Changes
-------

* CTRL+C termination now results in a graceful termination which includes sending QUIT to the server
* Major event handling overhaul.  Legacy apps *should* work fine, but if not, please let me know
  by filing a ticket on github or something!
  * For those who care, the back-end is now using a new class for handling and storing events.
    This class is eventually going to be used for all handlers, rather than passing around a bunch
    of arguments that are often unused.
* README was removed in favor of two files: YAIL-RDOC for the rdoc "intro" info, and README.md for
  a github-friendly description of the bot.

Fixes
-----

* Nickname change in forced handler is now safer
* Version information is now stored outside the main YAIL library
* TODO updated a lot to better reflect my short-, medium-, and long-term goals
* General update to documentation - a few grammatical fixes, some doc errors fixed, etc
* MessageParser fixes to make it better at handling some of the edge cases, and better tests to
  make sure it's doing what I think it's doing.

1.3.5 and prior
===============

Go to github, look at the incredibly long and painful old version of CHANGELOG.  Weep.  Hate
Nerdmaster for being such a moron.
